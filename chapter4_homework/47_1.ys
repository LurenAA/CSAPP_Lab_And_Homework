# .align只对数据生效，不按照x86的方式

.pos 0
    irmovq stack, %rsp
    call main
    halt
# .align 8
.byte 1
.byte 1
.byte 1
.byte 1
data:
    .quad	0x0000000000000004
	.quad	0x0000000000000003
	.quad	0x0000000000000002
	.quad	0x0000000000000001
main:
    irmovq data, %rdi
    irmovq $4, %rsi
    call bubble_b

bubble_b:
    # rdi = data rsi = count
    addq %rsi, %rsi
    addq %rsi, %rsi
    addq %rsi, %rsi # 8 * %rsi
    addq %rdi, %rsi # data + 8 * %rsi
    irmovq $-8, %rcx  
    addq %rcx, %rsi #  last = data + 8 * %rsi - 8
    # rsi = last
    irmovq $8, %rcx  
    jmp	L2
L3:
    addq %rcx, %rax
L5:
    rrmovq %rax, %r12
    subq %rsi, %r12 # r12 = i - last
    jge L7
    mrmovq (%rax), %r8
    mrmovq 8(%rax), %r9
    subq %r8,%r9
    jge L3
    mrmovq 8(%rax), %r9
    rmmovq %r9,(%rax)
    rmmovq %r8,8(%rax)
    jmp L3
L7:
    subq %rcx, %rsi
L2:
    rrmovq %rsi, %r11 # copy rsi => r11
    subq %rdi,%r11 # r11 = last - data
    jle L8
    rrmovq %rdi, %rax  # i = data
    # rax = i
    jmp L5 
L8:
    ret

.pos 0x200
stack:
