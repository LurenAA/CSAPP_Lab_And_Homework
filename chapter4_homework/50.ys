.pos 0
    irmovq stack, %rsp
    call main
    halt

main:
    irmovq $10, %r12
    irmovq $1, %r11
    irmovq $0, %r10
    irmovq result, %rcx
    irmovq $8, %rbp

    jmp LL
loop:
    rrmovq %r10, %rdi
    call switchv
    rmmovq %rax, (%rcx)
    addq %rbp, %rcx

    addq %r11, %r10
LL:
    rrmovq %r12, %r13
    subq %r10, %r13
    jge loop
    ret
    

.align 8
switch_map:
    .quad L1  # 0
    .quad L4  # 1
    .quad L2  # 2
    .quad L3  # 3
    .quad L4  # 4
    .quad L2  # 5
 
switchv:
    irmovq $5, %r14
    subq %rdi, %r14 # 5 - idx
    jl L4
    rrmovq %rdi, %rsi
    addq %rsi, %rsi
    addq %rsi, %rsi
    addq %rsi, %rsi
    irmovq switch_map, %r14
    addq %r14, %rsi
    mrmovq (%rsi), %rsi
    pushq %rsi
    ret
L1: 
    irmovq $0xaaa, %rax
    ret
L2:    
    irmovq $0xbbb, %rax
    ret
L3:
    irmovq $0xccc, %rax
    ret
L4:
    irmovq $0xddd, %rax
    ret

.pos 0x200
stack:

.pos 0x300
result:
